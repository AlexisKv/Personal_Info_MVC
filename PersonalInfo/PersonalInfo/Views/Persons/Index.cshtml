
@model IEnumerable<PersonalInfo.Core.Models.Person>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<p>
    <a class="Add-person-button" asp-action="Create">Add Person</a>
</p>
<form asp-controller="Persons" asp-action="Index" method="get">
    <div class="search-allButtons" >
        <input class="search-button" placeholder="Last Name" type="text" name="SearchString"/>
        <input class="search-button1" type="submit" value="Filter"/>
    </div>
</form>
<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th> Relationship
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BirthDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Address)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody id="input-search">
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                <button type="button" class="btn-btn-primary @((item.IsMerriged && !string.IsNullOrEmpty(item.Relationship)) ||(item.IsMerriged == false && string.IsNullOrEmpty(item.Relationship))  ? "pointerEventOff" : "")"
                        data-bs-toggle="modal" data-bs-target="#exampleModal-@item.Id">
                    @if (item.IsMerriged == false && string.IsNullOrEmpty(item.Relationship))
                    {<text>Single</text>}
                    else
                    {
                        {<text>Merried - </text>}@Html.DisplayFor(modelItem => item.Relationship)
                    }
                    @if (string.IsNullOrEmpty(item.Relationship) && item.IsMerriged == true)
                    {
                        <text>Select a partner</text>
                    }
                </button>
                <div class="modal fade" id="exampleModal-@item.Id" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-body">
                                <form autocomplete="off" asp-action="MerrigePopUp" method="post">
                                    <input readonly="readonly" type="hidden" id=@item.Id name="Id" value=@item.Id><br>
                                    <div class="input-spouse">
                                        <label class="Merrige-input" for="MerrigeName input">Spouse:</label><br>
                                        <div class="autocomplete" style="width:300px;">
                                            <input id="MerrigeName" type="text" name="MerrigeName" placeholder="Name">
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="close-button" data-bs-dismiss="modal">Close</button>
                                        <button type="submit" class="details-button Save-changes">Save changes</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BirthDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                <a class="action-button" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a class="action-button" asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a class="action-button" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
    }

    </tbody>
</table>
<script>

   function autocomplete(inp, arr) {
     var currentFocus;
     document.querySelector("#input-search").querySelectorAll("input").forEach(x => {
         x.addEventListener("input", function(e) {
   var a, b, i, val = this.value;

   closeAllLists();
   if (!val) { return false;}
   currentFocus = -1;

   a = document.createElement("DIV");
   a.setAttribute("id", this.id + "autocomplete-list");
   a.setAttribute("class", "autocomplete-items");

   this.parentNode.appendChild(a);
   
   for (i = 0; i < arr.length; i++) {
     if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
       b = document.createElement("DIV");
       b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
       b.innerHTML += arr[i].substr(val.length);
       b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
       b.addEventListener("click", function(e) {
           x.value = this.getElementsByTagName("input")[0].value;
           closeAllLists();
       });
       
       a.appendChild(b);
     }
   }
                                         });
     })

     function closeAllLists(elmnt) {
       var x = document.getElementsByClassName("autocomplete-items");
       for (var i = 0; i < x.length; i++) {
         if (elmnt != x[i] && elmnt != inp) {
           x[i].parentNode.removeChild(x[i]);
         }
       }
     }
     document.addEventListener("click", function (e) {
         closeAllLists(e.target);
     });
   }

   fetch("Persons/Qwe").then(x => x.json()).then(x => {

       autocomplete(document.getElementById("MerrigeName"), x);
      })
   </script>
